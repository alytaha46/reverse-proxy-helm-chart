name: Deploy Helm chart

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Select the environment'
        required: true
        type: choice
        options:
          - sandbox
          - maac-mgmt
  
  workflow_call:
    inputs:
      ENVIRONMENT:
        description: 'Environment name'
        required: true
        type: string

permissions:
  id-token: write
  contents: write

jobs:    
  install_chart:
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: self-hosted
    steps:
      
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/Github-Runners-Access
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Log IP
        run: curl -s https://checkip.amazonaws.com/

      - name: Log AWS principal
        run: aws sts get-caller-identity

      - name: Install Helm and kubectl
        id: install-helm
        shell: bash
        run: |
          # Install kubectl
          pip install kubernetes
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mkdir -p ~/.local/bin
          mv ./kubectl ~/.local/bin/kubectl
          kubectl version --client

          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version
          
          aws eks update-kubeconfig --region ${{ vars.AWS_DEFAULT_REGION }} --name ${{ vars.CLUSTER_NAME }}

      - name: Install Helm chart
        shell: bash
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

          helm upgrade --install --create-namespace --namespace vgeco-reverse-proxy \
            -f ./nginxChart/config/${{ vars.AWS_ACCOUNT_NAME }}-${{ vars.CLUSTER_NAME }}.yaml \
            test-release bitnami/nginx

      - name: Get LoadBalancer DNS
        id: get_lb_dns
        run: |
              LB_DNS=$(kubectl get svc test-release-nginx -n vgeco-reverse-proxy -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
              echo $LB_DNS
              echo "LB_DNS=${LB_DNS}" >> $GITHUB_ENV
